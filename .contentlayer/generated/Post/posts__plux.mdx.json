{
  "title": "Plux - Chatting with Your PDFs Made Easy",
  "description": "Explore the architecture and key features of Plux, a user-friendly web application that empowers users to have conversations with their PDF documents using AI.  Discover how Plux leverages Next.js, TypeScript, Langchain, Pinecone, Groq (Llama-3), and Stripe to deliver a seamless and intelligent experience.",
  "date": "2024-06-08T00:00:00.000Z",
  "published": true,
  "image": "https://ik.imagekit.io/omraval18/plux-1_r3Aa1Xe0p.png?updatedAt=1718450579758",
  "github": "https://github.com/omraval18/plux",
  "live": "https://plux.onrender.com/",
  "authors": [
    "Om Raval"
  ],
  "body": {
    "raw": "\n## Plux: Giving Superpowers to Your PDFs\n\nTired of manually searching through lengthy PDF documents? Plux, a web application powered by Next.js and advanced AI technologies, transforms your PDFs into interactive chat partners.  This blog post delves into the design and functionality of Plux, explaining how it makes extracting information from PDFs a breeze.\n\n## Project Goal:  Making PDFs Conversational\n\nThe primary goal of Plux is to make interacting with PDFs as easy as chatting with a friend. We designed it to:\n\n- **Turn PDFs into Chat Partners:** Users can ask questions about their PDFs in natural language, and Plux will provide answers extracted directly from the document.\n- **Seamless User Experience:** The user interface is designed for simplicity, allowing anyone to effortlessly upload their PDF and start asking questions.\n- **Scalable Architecture:** Plux is built to handle a large number of users and documents, ensuring a reliable and efficient experience.\n\n## Technology Stack: Building a Powerful Tool\n\nPlux utilizes a combination of technologies to achieve its impressive capabilities:\n\n- **Next.js:**  A React framework known for its performance, server-side rendering (SSR), and built-in optimization features.\n- **TypeScript:**  A strongly-typed superset of JavaScript that improves code readability and maintainability.\n- **Langchain:** A library for building and deploying LLM-powered applications, enabling Plux to extract information from PDFs and provide relevant responses.\n- **Pinecone:** A vector database that allows Plux to quickly and efficiently search through large sets of PDF data to find the most relevant answers.\n- **Llama-3:**  The powerful AI engine that provides the language understanding and generation capabilities for Plux's chat functionality.\n- **Stripe:** A payment processing platform that handles subscriptions and payment management for Plux's premium features.\n\n## System Design: Understanding the Flow\n\nLet's break down the system design of Plux, showcasing how it works behind the scenes:\n\n### A. User Interaction (Client-Side)\n\nThe user interface of Plux is designed with React components:\n\n- **Upload Button:** A user-friendly button that allows users to select and upload a PDF document. \n- **PDF Renderer:**  Displays the selected PDF document, allowing users to navigate through pages and zoom in or out.\n- **Chat Input:**  The text area where users type their questions.\n- **Message List:** Displays the conversation history, including both user questions and the AI's responses.\n\n### B. Server-Side Processing\n\nWhen a user uploads a PDF, Plux's server-side processing steps are:\n\n1. **Upload Handling:** The uploaded PDF is handled securely using Uploadthing.\n2. **PDF Parsing:** The PDF is parsed and split into pages using Langchain's `PDFLoader`.\n3. **Vectorization:**  The extracted text from each page is vectorized using TogetherAI's embeddings (or an alternative embedding model like TogetherAI's m2-bert).\n4. **Indexing:**  The resulting vectors are indexed in Pinecone, creating a searchable database of the PDF's content.\n5. **Chat Handling:** When a user asks a question, the question is also vectorized and compared against the indexed PDF vectors in Pinecone.  The closest matches are retrieved, and Langchain constructs a comprehensive context from those pages.\n6. **AI Response Generation:** Meta's Llama-3 LLM (or a similar model) is used to process the context and generate a human-like response to the user's question.\n\n### C. Real-time Chat Interaction\n\nPlux provides a smooth and interactive chat experience:\n\n- **Streaming Responses:**  The AI's response is streamed back to the user in real-time, creating a natural and engaging conversation.\n- **Conversation History:**  Messages are saved to the database so users can revisit their past conversations.\n- **Subscription Management:**  Users can upgrade to a premium plan to access features like larger file uploads, higher page limits, and priority support.\n\n## Benefits of the Architecture\n\nPlux's architecture delivers several benefits:\n\n- **Fast and Efficient Search:**  Pinecone's vector database allows for incredibly fast searches through large amounts of PDF data, delivering quick responses.\n- **Natural Language Understanding:**  Meta's language models like Llama-3 make it possible to interact with PDFs using natural language, simplifying information retrieval.\n- **Scalable Design:** The serverless architecture of Plux is easily scalable to handle a growing number of users and PDF files.\n\n## Key Takeaways\n\nBuilding an application like Plux requires careful consideration of several factors:\n\n- **AI Integration:** Choosing the right AI engine and embeddings model is critical for achieving accurate and natural language processing capabilities.\n- **Database Design:**  Selecting a database that can efficiently store and retrieve large amounts of text and vector data is essential.\n- **User Experience:**  Creating a user-friendly interface that simplifies document upload, navigation, and the chat process is crucial for adoption.\n\n## Conclusion:  The Future of PDF Interaction\n\nPlux represents the future of interacting with PDF documents. By combining the power of AI, a robust architecture, and a user-centric design, Plux makes it easier than ever to extract information and engage with complex PDF content.\n\nWe hope this deep dive into Plux's architecture and capabilities has been illuminating. For more information, you can check out the [source code](https://github.com/omraval18/quill) and try it out yourself.  Plux is a testament to the exciting possibilities that arise when AI technology is applied to everyday tasks, making complex information more accessible to everyone.",
    "code": "var Component=(()=>{var mn=Object.create;var O=Object.defineProperty;var pn=Object.getOwnPropertyDescriptor;var bn=Object.getOwnPropertyNames;var _n=Object.getPrototypeOf,hn=Object.prototype.hasOwnProperty;var K=(u,n)=>()=>(n||u((n={exports:{}}).exports,n),n.exports),vn=(u,n)=>{for(var h in n)O(u,h,{get:n[h],enumerable:!0})},ke=(u,n,h,x)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let N of bn(n))!hn.call(u,N)&&N!==h&&O(u,N,{get:()=>n[N],enumerable:!(x=pn(n,N))||x.enumerable});return u};var Nn=(u,n,h)=>(h=u!=null?mn(_n(u)):{},ke(n||!u||!u.__esModule?O(h,\"default\",{value:u,enumerable:!0}):h,u)),xn=u=>ke(O({},\"__esModule\",{value:!0}),u);var Ue=K((Pn,De)=>{De.exports=React});var Pe=K(X=>{\"use strict\";(function(){\"use strict\";var u=Ue(),n=Symbol.for(\"react.element\"),h=Symbol.for(\"react.portal\"),x=Symbol.for(\"react.fragment\"),N=Symbol.for(\"react.strict_mode\"),H=Symbol.for(\"react.profiler\"),J=Symbol.for(\"react.provider\"),Z=Symbol.for(\"react.context\"),R=Symbol.for(\"react.forward_ref\"),j=Symbol.for(\"react.suspense\"),I=Symbol.for(\"react.suspense_list\"),T=Symbol.for(\"react.memo\"),L=Symbol.for(\"react.lazy\"),Te=Symbol.for(\"react.offscreen\"),Q=Symbol.iterator,Se=\"@@iterator\";function Ce(e){if(e===null||typeof e!=\"object\")return null;var t=Q&&e[Q]||e[Se];return typeof t==\"function\"?t:null}var k=u.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function m(e){{for(var t=arguments.length,a=new Array(t>1?t-1:0),o=1;o<t;o++)a[o-1]=arguments[o];Fe(\"error\",e,a)}}function Fe(e,t,a){{var o=k.ReactDebugCurrentFrame,l=o.getStackAddendum();l!==\"\"&&(t+=\"%s\",a=a.concat([l]));var d=a.map(function(s){return String(s)});d.unshift(\"Warning: \"+t),Function.prototype.apply.call(console[e],console,d)}}var Ae=!1,Oe=!1,je=!1,Ie=!1,Le=!1,ee;ee=Symbol.for(\"react.module.reference\");function Me(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===x||e===H||Le||e===N||e===j||e===I||Ie||e===Te||Ae||Oe||je||typeof e==\"object\"&&e!==null&&(e.$$typeof===L||e.$$typeof===T||e.$$typeof===J||e.$$typeof===Z||e.$$typeof===R||e.$$typeof===ee||e.getModuleId!==void 0))}function We(e,t,a){var o=e.displayName;if(o)return o;var l=t.displayName||t.name||\"\";return l!==\"\"?a+\"(\"+l+\")\":a}function ne(e){return e.displayName||\"Context\"}function v(e){if(e==null)return null;if(typeof e.tag==\"number\"&&m(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case x:return\"Fragment\";case h:return\"Portal\";case H:return\"Profiler\";case N:return\"StrictMode\";case j:return\"Suspense\";case I:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case Z:var t=e;return ne(t)+\".Consumer\";case J:var a=e;return ne(a._context)+\".Provider\";case R:return We(e,e.render,\"ForwardRef\");case T:var o=e.displayName||null;return o!==null?o:v(e.type)||\"Memo\";case L:{var l=e,d=l._payload,s=l._init;try{return v(s(d))}catch{return null}}}return null}var g=Object.assign,P=0,re,te,ae,oe,ie,se,le;function de(){}de.__reactDisabledLog=!0;function Ye(){{if(P===0){re=console.log,te=console.info,ae=console.warn,oe=console.error,ie=console.group,se=console.groupCollapsed,le=console.groupEnd;var e={configurable:!0,enumerable:!0,value:de,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}P++}}function $e(){{if(P--,P===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:g({},e,{value:re}),info:g({},e,{value:te}),warn:g({},e,{value:ae}),error:g({},e,{value:oe}),group:g({},e,{value:ie}),groupCollapsed:g({},e,{value:se}),groupEnd:g({},e,{value:le})})}P<0&&m(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var M=k.ReactCurrentDispatcher,W;function S(e,t,a){{if(W===void 0)try{throw Error()}catch(l){var o=l.stack.trim().match(/\\n( *(at )?)/);W=o&&o[1]||\"\"}return`\n`+W+e}}var Y=!1,C;{var Ve=typeof WeakMap==\"function\"?WeakMap:Map;C=new Ve}function ue(e,t){if(!e||Y)return\"\";{var a=C.get(e);if(a!==void 0)return a}var o;Y=!0;var l=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var d;d=M.current,M.current=null,Ye();try{if(t){var s=function(){throw Error()};if(Object.defineProperty(s.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(s,[])}catch(b){o=b}Reflect.construct(e,[],s)}else{try{s.call()}catch(b){o=b}e.call(s.prototype)}}else{try{throw Error()}catch(b){o=b}e()}}catch(b){if(b&&o&&typeof b.stack==\"string\"){for(var i=b.stack.split(`\n`),p=o.stack.split(`\n`),f=i.length-1,c=p.length-1;f>=1&&c>=0&&i[f]!==p[c];)c--;for(;f>=1&&c>=0;f--,c--)if(i[f]!==p[c]){if(f!==1||c!==1)do if(f--,c--,c<0||i[f]!==p[c]){var _=`\n`+i[f].replace(\" at new \",\" at \");return e.displayName&&_.includes(\"<anonymous>\")&&(_=_.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&C.set(e,_),_}while(f>=1&&c>=0);break}}}finally{Y=!1,M.current=d,$e(),Error.prepareStackTrace=l}var U=e?e.displayName||e.name:\"\",y=U?S(U):\"\";return typeof e==\"function\"&&C.set(e,y),y}function qe(e,t,a){return ue(e,!1)}function Be(e){var t=e.prototype;return!!(t&&t.isReactComponent)}function F(e,t,a){if(e==null)return\"\";if(typeof e==\"function\")return ue(e,Be(e));if(typeof e==\"string\")return S(e);switch(e){case j:return S(\"Suspense\");case I:return S(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case R:return qe(e.render);case T:return F(e.type,t,a);case L:{var o=e,l=o._payload,d=o._init;try{return F(d(l),t,a)}catch{}}}return\"\"}var E=Object.prototype.hasOwnProperty,fe={},ce=k.ReactDebugCurrentFrame;function A(e){if(e){var t=e._owner,a=F(e.type,e._source,t?t.type:null);ce.setExtraStackFrame(a)}else ce.setExtraStackFrame(null)}function ze(e,t,a,o,l){{var d=Function.call.bind(E);for(var s in e)if(d(e,s)){var i=void 0;try{if(typeof e[s]!=\"function\"){var p=Error((o||\"React class\")+\": \"+a+\" type `\"+s+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[s]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw p.name=\"Invariant Violation\",p}i=e[s](t,s,o,a,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(f){i=f}i&&!(i instanceof Error)&&(A(l),m(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",o||\"React class\",a,s,typeof i),A(null)),i instanceof Error&&!(i.message in fe)&&(fe[i.message]=!0,A(l),m(\"Failed %s type: %s\",a,i.message),A(null))}}}var Ge=Array.isArray;function $(e){return Ge(e)}function Ke(e){{var t=typeof Symbol==\"function\"&&Symbol.toStringTag,a=t&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return a}}function Xe(e){try{return me(e),!1}catch{return!0}}function me(e){return\"\"+e}function pe(e){if(Xe(e))return m(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",Ke(e)),me(e)}var w=k.ReactCurrentOwner,He={key:!0,ref:!0,__self:!0,__source:!0},be,_e,V;V={};function Je(e){if(E.call(e,\"ref\")){var t=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(t&&t.isReactWarning)return!1}return e.ref!==void 0}function Ze(e){if(E.call(e,\"key\")){var t=Object.getOwnPropertyDescriptor(e,\"key\").get;if(t&&t.isReactWarning)return!1}return e.key!==void 0}function Qe(e,t){if(typeof e.ref==\"string\"&&w.current&&t&&w.current.stateNode!==t){var a=v(w.current.type);V[a]||(m('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',v(w.current.type),e.ref),V[a]=!0)}}function en(e,t){{var a=function(){be||(be=!0,m(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",t))};a.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:a,configurable:!0})}}function nn(e,t){{var a=function(){_e||(_e=!0,m(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",t))};a.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:a,configurable:!0})}}var rn=function(e,t,a,o,l,d,s){var i={$$typeof:n,type:e,key:t,ref:a,props:s,_owner:d};return i._store={},Object.defineProperty(i._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(i,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:o}),Object.defineProperty(i,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:l}),Object.freeze&&(Object.freeze(i.props),Object.freeze(i)),i};function tn(e,t,a,o,l){{var d,s={},i=null,p=null;a!==void 0&&(pe(a),i=\"\"+a),Ze(t)&&(pe(t.key),i=\"\"+t.key),Je(t)&&(p=t.ref,Qe(t,l));for(d in t)E.call(t,d)&&!He.hasOwnProperty(d)&&(s[d]=t[d]);if(e&&e.defaultProps){var f=e.defaultProps;for(d in f)s[d]===void 0&&(s[d]=f[d])}if(i||p){var c=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;i&&en(s,c),p&&nn(s,c)}return rn(e,i,p,l,o,w.current,s)}}var q=k.ReactCurrentOwner,he=k.ReactDebugCurrentFrame;function D(e){if(e){var t=e._owner,a=F(e.type,e._source,t?t.type:null);he.setExtraStackFrame(a)}else he.setExtraStackFrame(null)}var B;B=!1;function z(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===n}function ve(){{if(q.current){var e=v(q.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function an(e){{if(e!==void 0){var t=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),a=e.lineNumber;return`\n\nCheck your code at `+t+\":\"+a+\".\"}return\"\"}}var Ne={};function on(e){{var t=ve();if(!t){var a=typeof e==\"string\"?e:e.displayName||e.name;a&&(t=`\n\nCheck the top-level render call using <`+a+\">.\")}return t}}function xe(e,t){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var a=on(t);if(Ne[a])return;Ne[a]=!0;var o=\"\";e&&e._owner&&e._owner!==q.current&&(o=\" It was passed a child from \"+v(e._owner.type)+\".\"),D(e),m('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',a,o),D(null)}}function ge(e,t){{if(typeof e!=\"object\")return;if($(e))for(var a=0;a<e.length;a++){var o=e[a];z(o)&&xe(o,t)}else if(z(e))e._store&&(e._store.validated=!0);else if(e){var l=Ce(e);if(typeof l==\"function\"&&l!==e.entries)for(var d=l.call(e),s;!(s=d.next()).done;)z(s.value)&&xe(s.value,t)}}}function sn(e){{var t=e.type;if(t==null||typeof t==\"string\")return;var a;if(typeof t==\"function\")a=t.propTypes;else if(typeof t==\"object\"&&(t.$$typeof===R||t.$$typeof===T))a=t.propTypes;else return;if(a){var o=v(t);ze(a,e.props,\"prop\",o,e)}else if(t.PropTypes!==void 0&&!B){B=!0;var l=v(t);m(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",l||\"Unknown\")}typeof t.getDefaultProps==\"function\"&&!t.getDefaultProps.isReactClassApproved&&m(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function ln(e){{for(var t=Object.keys(e.props),a=0;a<t.length;a++){var o=t[a];if(o!==\"children\"&&o!==\"key\"){D(e),m(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",o),D(null);break}}e.ref!==null&&(D(e),m(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),D(null))}}var ye={};function dn(e,t,a,o,l,d){{var s=Me(e);if(!s){var i=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(i+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var p=an(l);p?i+=p:i+=ve();var f;e===null?f=\"null\":$(e)?f=\"array\":e!==void 0&&e.$$typeof===n?(f=\"<\"+(v(e.type)||\"Unknown\")+\" />\",i=\" Did you accidentally export a JSX literal instead of a component?\"):f=typeof e,m(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",f,i)}var c=tn(e,t,a,l,d);if(c==null)return c;if(s){var _=t.children;if(_!==void 0)if(o)if($(_)){for(var U=0;U<_.length;U++)ge(_[U],e);Object.freeze&&Object.freeze(_)}else m(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else ge(_,e)}if(E.call(t,\"key\")){var y=v(e),b=Object.keys(t).filter(function(cn){return cn!==\"key\"}),G=b.length>0?\"{key: someKey, \"+b.join(\": ..., \")+\": ...}\":\"{key: someKey}\";if(!ye[y+G]){var fn=b.length>0?\"{\"+b.join(\": ..., \")+\": ...}\":\"{}\";m(`A props object containing a \"key\" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />`,G,y,fn,y),ye[y+G]=!0}}return e===x?ln(c):sn(c),c}}var un=dn;X.Fragment=x,X.jsxDEV=un})()});var we=K((wn,Ee)=>{\"use strict\";Ee.exports=Pe()});var Dn={};vn(Dn,{default:()=>kn,frontmatter:()=>gn});var r=Nn(we()),gn={title:\"Plux - Chatting with Your PDFs Made Easy\",description:\"Explore the architecture and key features of Plux, a user-friendly web application that empowers users to have conversations with their PDF documents using AI.  Discover how Plux leverages Next.js, TypeScript, Langchain, Pinecone, Groq (Llama-3), and Stripe to deliver a seamless and intelligent experience.\",image:\"https://ik.imagekit.io/omraval18/plux-1_r3Aa1Xe0p.png?updatedAt=1718450579758\",date:\"2024-06-08\",github:\"https://github.com/omraval18/plux\",live:\"https://plux.onrender.com/\",authors:[\"Om Raval\"]};function Re(u){let n=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\",ul:\"ul\",li:\"li\",strong:\"strong\",h3:\"h3\",ol:\"ol\",code:\"code\"},u.components);return(0,r.jsxDEV)(r.Fragment,{children:[(0,r.jsxDEV)(n.h2,{id:\"plux-giving-superpowers-to-your-pdfs\",children:[(0,r.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to Action\",href:\"#plux-giving-superpowers-to-your-pdfs\",children:(0,r.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this)},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this),\"Plux: Giving Superpowers to Your PDFs\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:13,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"Tired of manually searching through lengthy PDF documents? Plux, a web application powered by Next.js and advanced AI technologies, transforms your PDFs into interactive chat partners.  This blog post delves into the design and functionality of Plux, explaining how it makes extracting information from PDFs a breeze.\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:15,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h2,{id:\"project-goal--making-pdfs-conversational\",children:[(0,r.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to Action\",href:\"#project-goal--making-pdfs-conversational\",children:(0,r.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this)},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this),\"Project Goal:  Making PDFs Conversational\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:17,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"The primary goal of Plux is to make interacting with PDFs as easy as chatting with a friend. We designed it to:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:19,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.ul,{children:[`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Turn PDFs into Chat Partners:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:21,columnNumber:3},this),\" Users can ask questions about their PDFs in natural language, and Plux will provide answers extracted directly from the document.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:21,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Seamless User Experience:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:22,columnNumber:3},this),\" The user interface is designed for simplicity, allowing anyone to effortlessly upload their PDF and start asking questions.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:22,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Scalable Architecture:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:23,columnNumber:3},this),\" Plux is built to handle a large number of users and documents, ensuring a reliable and efficient experience.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:23,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:21,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h2,{id:\"technology-stack-building-a-powerful-tool\",children:[(0,r.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to Action\",href:\"#technology-stack-building-a-powerful-tool\",children:(0,r.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this)},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this),\"Technology Stack: Building a Powerful Tool\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:25,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"Plux utilizes a combination of technologies to achieve its impressive capabilities:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:27,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.ul,{children:[`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Next.js:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:29,columnNumber:3},this),\"  A React framework known for its performance, server-side rendering (SSR), and built-in optimization features.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:29,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"TypeScript:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:30,columnNumber:3},this),\"  A strongly-typed superset of JavaScript that improves code readability and maintainability.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:30,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Langchain:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:31,columnNumber:3},this),\" A library for building and deploying LLM-powered applications, enabling Plux to extract information from PDFs and provide relevant responses.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:31,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Pinecone:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:32,columnNumber:3},this),\" A vector database that allows Plux to quickly and efficiently search through large sets of PDF data to find the most relevant answers.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:32,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Llama-3:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:33,columnNumber:3},this),\"  The powerful AI engine that provides the language understanding and generation capabilities for Plux's chat functionality.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:33,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Stripe:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:34,columnNumber:3},this),\" A payment processing platform that handles subscriptions and payment management for Plux's premium features.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:34,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:29,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h2,{id:\"system-design-understanding-the-flow\",children:[(0,r.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to Action\",href:\"#system-design-understanding-the-flow\",children:(0,r.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this)},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this),\"System Design: Understanding the Flow\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:36,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"Let's break down the system design of Plux, showcasing how it works behind the scenes:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:38,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h3,{id:\"a-user-interaction-client-side\",children:[(0,r.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to Action\",href:\"#a-user-interaction-client-side\",children:(0,r.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this)},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this),\"A. User Interaction (Client-Side)\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:40,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"The user interface of Plux is designed with React components:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:42,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.ul,{children:[`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Upload Button:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:44,columnNumber:3},this),\" A user-friendly button that allows users to select and upload a PDF document.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:44,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"PDF Renderer:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:45,columnNumber:3},this),\"  Displays the selected PDF document, allowing users to navigate through pages and zoom in or out.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:45,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Chat Input:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:46,columnNumber:3},this),\"  The text area where users type their questions.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:46,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Message List:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:47,columnNumber:3},this),\" Displays the conversation history, including both user questions and the AI's responses.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:47,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:44,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h3,{id:\"b-server-side-processing\",children:[(0,r.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to Action\",href:\"#b-server-side-processing\",children:(0,r.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this)},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this),\"B. Server-Side Processing\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:49,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"When a user uploads a PDF, Plux's server-side processing steps are:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:51,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.ol,{children:[`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Upload Handling:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:53,columnNumber:4},this),\" The uploaded PDF is handled securely using Uploadthing.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:53,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"PDF Parsing:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:54,columnNumber:4},this),\" The PDF is parsed and split into pages using Langchain's \",(0,r.jsxDEV)(n.code,{children:\"PDFLoader\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:54,columnNumber:78},this),\".\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:54,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Vectorization:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:55,columnNumber:4},this),\"  The extracted text from each page is vectorized using TogetherAI's embeddings (or an alternative embedding model like TogetherAI's m2-bert).\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:55,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Indexing:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:56,columnNumber:4},this),\"  The resulting vectors are indexed in Pinecone, creating a searchable database of the PDF's content.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:56,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Chat Handling:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:57,columnNumber:4},this),\" When a user asks a question, the question is also vectorized and compared against the indexed PDF vectors in Pinecone.  The closest matches are retrieved, and Langchain constructs a comprehensive context from those pages.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:57,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"AI Response Generation:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:58,columnNumber:4},this),\" Meta's Llama-3 LLM (or a similar model) is used to process the context and generate a human-like response to the user's question.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:58,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:53,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h3,{id:\"c-real-time-chat-interaction\",children:[(0,r.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to Action\",href:\"#c-real-time-chat-interaction\",children:(0,r.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this)},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this),\"C. Real-time Chat Interaction\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:60,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"Plux provides a smooth and interactive chat experience:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:62,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.ul,{children:[`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Streaming Responses:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:64,columnNumber:3},this),\"  The AI's response is streamed back to the user in real-time, creating a natural and engaging conversation.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:64,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Conversation History:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:65,columnNumber:3},this),\"  Messages are saved to the database so users can revisit their past conversations.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:65,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Subscription Management:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:66,columnNumber:3},this),\"  Users can upgrade to a premium plan to access features like larger file uploads, higher page limits, and priority support.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:66,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:64,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h2,{id:\"benefits-of-the-architecture\",children:[(0,r.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to Action\",href:\"#benefits-of-the-architecture\",children:(0,r.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this)},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this),\"Benefits of the Architecture\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:68,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"Plux's architecture delivers several benefits:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:70,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.ul,{children:[`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Fast and Efficient Search:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:72,columnNumber:3},this),\"  Pinecone's vector database allows for incredibly fast searches through large amounts of PDF data, delivering quick responses.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:72,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Natural Language Understanding:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:73,columnNumber:3},this),\"  Meta's language models like Llama-3 make it possible to interact with PDFs using natural language, simplifying information retrieval.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:73,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Scalable Design:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:74,columnNumber:3},this),\" The serverless architecture of Plux is easily scalable to handle a growing number of users and PDF files.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:74,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:72,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h2,{id:\"key-takeaways\",children:[(0,r.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to Action\",href:\"#key-takeaways\",children:(0,r.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this)},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this),\"Key Takeaways\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:76,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"Building an application like Plux requires careful consideration of several factors:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:78,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.ul,{children:[`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"AI Integration:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:80,columnNumber:3},this),\" Choosing the right AI engine and embeddings model is critical for achieving accurate and natural language processing capabilities.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:80,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Database Design:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:81,columnNumber:3},this),\"  Selecting a database that can efficiently store and retrieve large amounts of text and vector data is essential.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:81,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"User Experience:\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:82,columnNumber:3},this),\"  Creating a user-friendly interface that simplifies document upload, navigation, and the chat process is crucial for adoption.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:82,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:80,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h2,{id:\"conclusion--the-future-of-pdf-interaction\",children:[(0,r.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to Action\",href:\"#conclusion--the-future-of-pdf-interaction\",children:(0,r.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this)},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this),\"Conclusion:  The Future of PDF Interaction\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:84,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"Plux represents the future of interacting with PDF documents. By combining the power of AI, a robust architecture, and a user-centric design, Plux makes it easier than ever to extract information and engage with complex PDF content.\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:86,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:[\"We hope this deep dive into Plux's architecture and capabilities has been illuminating. For more information, you can check out the \",(0,r.jsxDEV)(n.a,{href:\"https://github.com/omraval18/quill\",children:\"source code\"},void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:88,columnNumber:133},this),\" and try it out yourself.  Plux is a testament to the exciting possibilities that arise when AI technology is applied to everyday tasks, making complex information more accessible to everyone.\"]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:88,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\",lineNumber:1,columnNumber:1},this)}function yn(u={}){let{wrapper:n}=u.components||{};return n?(0,r.jsxDEV)(n,Object.assign({},u,{children:(0,r.jsxDEV)(Re,u,void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this)}),void 0,!1,{fileName:\"/Users/omraval/Desktop/portfolio/src/content/posts/_mdx_bundler_entry_point-d8d82202-0516-4558-b785-dfa1ab8afae2.mdx\"},this):Re(u)}var kn=yn;return xn(Dn);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "posts/plux.mdx",
  "_raw": {
    "sourceFilePath": "posts/plux.mdx",
    "sourceFileName": "plux.mdx",
    "sourceFileDir": "posts",
    "contentType": "mdx",
    "flattenedPath": "posts/plux"
  },
  "type": "Post",
  "slug": "/posts/plux",
  "slugAsParams": "plux"
}